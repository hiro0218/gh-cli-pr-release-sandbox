name: git-pr-release

on:
  push:
    branches:
      - develop
      - 'feature/maintenance-**'
  workflow_dispatch:

jobs:
  git-pr-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1 # PRの存在チェックには最新のコミット情報のみあれば良い

      - name: Set base and head branches for PR
        run: |
          if [[ "${{ github.ref }}" == 'refs/heads/develop' ]]; then
            echo "BASE_BRANCH=main" >> $GITHUB_ENV
            echo "HEAD_BRANCH=develop" >> $GITHUB_ENV
          else
            # Extract the branch name without refs/heads/
            HEAD_BRANCH="${GITHUB_REF#refs/heads/}"
            echo "BASE_BRANCH=develop" >> $GITHUB_ENV
            echo "HEAD_BRANCH=${HEAD_BRANCH}" >> $GITHUB_ENV
          fi

      - name: Check if PR exists between base and head
        run: |
          PR_NUMBER=$(gh pr list --base $BASE_BRANCH --head $HEAD_BRANCH --json number -q ".[].number")
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create PR if not exists
        if: env.PR_NUMBER == ''
        run: |
          PR_CREATE_OUTPUT=$(gh pr create --base $BASE_BRANCH --head $HEAD_BRANCH --title "Auto PR" --body "Automatically generated PR.")
          echo "$PR_CREATE_OUTPUT"
          
          # 新しいPRの番号を抽出して環境変数に設定
          PR_NUMBER=$(echo "$PR_CREATE_OUTPUT" | grep -o 'https://github.com/.*/pull/[0-9]*' | grep -o '[0-9]*$')
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update PR description
        if: env.PR_NUMBER != ''
        run: |          
          # 日付フォーマットを +%Y/%m/%d %H:%M に指定
          CURRENT_DATE=$(TZ='Asia/Tokyo' date "+%Y/%m/%d %H:%M")
          
          # マージされたPR一覧
          inpact_list=$(gh pr list --base develop --state merged --search '-label:"1 本番影響なし"' --json url,author --template '{{range .}}- [ ] {{.url}} @{{.author.login}}{{"\n"}}{{end}}')
          no_inpact_list=$(gh pr list --base develop --state merged --search 'label:"1 本番影響なし"' --json url,author --template '{{range .}}- [ ] {{.url}} @{{.author.login}}{{"\n"}}{{end}}')
          
          echo $inpact_list
          echo $no_inpact_list

          # PRへの説明欄
          PR_DESCRIPTION=$(cat <<EOF
          - [ ] pilot 反映済み
          
          ---
          
          ## 銘柄
          > [!WARNING]
          >
          > 本番影響がないこと, dev*・pilot環境で問題ないことを確認済みで release しても問題ない場合は check を入れてください。
          > 
          > [リリース体制について](https://zozo.rickcloud.jp/wiki/x/FlWmF#:~:text=%E3%83%AA%E3%83%AA%E3%83%BC%E3%82%B9%E4%BD%93%E5%88%B6)

          ### 本番影響あり
          <!-- 本番影響ありのPRリスト挿入 -->
          $inpact_list

          ### 本番影響なし
          <!-- 本番影響なしのPRリスト挿入 -->
          $no_inpact_list
          
          EOF
          )
          
          gh pr edit "$PR_NUMBER" --title "Release $CURRENT_DATE" --body "$PR_DESCRIPTION" # GitHub CLIを使ってPRの概要を更新する
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
